import React,{ useState, useCallback, } from 'react'
import {Link} from 'react-router-dom'
import EditPerson from './EditPerson'
import '../../assets/styles/ListMenu.css'
import Popup from '../common/Popup';
import Input from '../common/Input';
import {useSelector,useDispatch,connect} from 'react-redux'
import * as actions from '../../state/Actions'
import * as constants from '../../utilities/Constants'
import {addPerson,deletePerson} from '../../state/Actions'



const ListMenu=(props)=> {
    
    const dispatch = useDispatch()
    const [data,setData] = useState(props.personList)
    const [test,setTest] = useState(data)
    console.log("FRom list menu", data)
    const [isOpen, setIsOpen] = useState(false);
    const [searchClicked,setSearchClicked] = useState(false)

    // Counter for assigning sl no
    let i=1;
    
    // Fetching and setting delete id
    let deleteid = -1;
    let [deleteId,setDeleteId] = useState(deleteid)
    
    // Fetching and passing edit data
    
    let editable = false;
    let editno=-1;
    let [editID,setEditId] = useState(editno)
    let [editList,setEditList] = useState(editable)
    
    
    const togglePopup = (id) => {
        console.log("dddd",id)
        setDeleteId(id)
        setIsOpen(!isOpen);
        
    }
    
    const deleteHandler = (deleteId) =>{
        console.log("dlete id",deleteId)
            props.deletePerson(deleteId)
            togglePopup()
    }

    
    const editHandler =(id,key)=>{
        editList=!editList   
        setEditList(editList)
        setEditId(id)
        console.log()

        console.log(editList)

    }

    console.log("State value from list menu",props.personList)

    const searchHandler = (key)=>{
        if(key!==""){setSearchClicked(true)}else{setSearchClicked(false); setTest(data)}
        searchClicked?(setTest(test.filter(person => person.name.toLowerCase().includes(key.toLowerCase())))):setTest(data)
        
    }
    console.log("test",test)
  return(
        <>
            {(editList)?(<EditPerson item={editID} editHandler={editHandler}/>):null} 
            
            {isOpen && <Popup
                    content={<>
                        <b id='logout-message'>{constants.LIST_PAGE.LIST_PAGE_DELETE_MESSAGE} </b>
                        <div className='logout-buttons'>
                    <button className='button-logout' id='red' onClick={()=>{deleteHandler(deleteId)}}>{constants.LIST_PAGE.LIST_PAGE_DELETE_MESSAGE_OK}</button>
                    <button onClick={togglePopup} className='button-logout'>{constants.LIST_PAGE.LIST_PAGE_DELETE_MESSAGE_CANCEL}</button>
                        </div>
                        
                        </>}
                        handleClose={togglePopup}
            />}
            <div>
            <div className='listmenu'>
                    <div className='listHeading'><p>{constants.LIST_PAGE.LIST_PAGE_HEADING}</p><div className='searchdiv'><input type='text' placeholder='Search' className='search' onKeyUp={(e)=>{searchHandler(e.target.value)}}/></div> </div>
                <div className='listTable'>
                    <table className='table'>
                        <thead>
                            
                                <th id='slno'>{constants.TABLE_HEADING.LIST_TABLE_HEADING_1} </th>
                                <th id='name'>{constants.TABLE_HEADING.LIST_TABLE_HEADING_2}</th>
                                <th id='idh'>{constants.TABLE_HEADING.LIST_TABLE_HEADING_3}</th>
                                <th id='genderh'>{constants.TABLE_HEADING.LIST_TABLE_HEADING_4}</th>
                                <th id='priorityh'>{constants.TABLE_HEADING.LIST_TABLE_HEADING_5}</th>
                                <th>{constants.TABLE_HEADING.LIST_TABLE_HEADING_6}</th>
                                <th>{constants.TABLE_HEADING.LIST_TABLE_HEADING_7}</th>
                                <th id='edit'>{constants.TABLE_HEADING.LIST_TABLE_HEADING_8}</th>
                                <th id='delete'>{constants.TABLE_HEADING.LIST_TABLE_HEADING_9}</th>
                              
                            

                        </thead>
                        
                        <tbody id='tbody'>
                        
                                {test.map(item=>(
                                        // console.log(item.id)
                                        <tr key={item.id}>
                                        <td id='slno'>{i++}</td>
                                        <td ids='names'>{item.name}</td>
                                        <td id='id'>{item.id}</td>
                                        <td id='gender'>{item.gender}</td>
                                        <td id='priority'>{item.priority}</td>
                                        <td id='savings'>{item.savings}</td>
                                        <td id='rd'>{item.rd}</td>
                                        <td id='edit'> <button className='button' onClick={()=>{editHandler(item)}} >{constants.TABLE_HEADING.LIST_TABLE_HEADING_8}</button></td>
                                        <td id='delete'><button className='button' onClick={()=>togglePopup(item.id)} >{constants.TABLE_HEADING.LIST_TABLE_HEADING_9}</button></td>
                                     </tr>
                                     
                                    ))}
                                
                            </tbody>

                        
                    </table>

                </div>
            </div>
        
            </div>
        </>
    )
}

const mapStatetoProps = ({task1})=>{
    return {personList:task1.personList}
}

const mapDispatchtoProps = (dispatch)=>{
    return { deletePerson : (id)=>{dispatch(deletePerson(id))}}
}

export default connect(mapStatetoProps,mapDispatchtoProps)(ListMenu)



------


LIST dispatch


<table>
                        <thead>
                            <div className='listTableHeading'>
                            <div className="listHeadingItem1"><th>{constants.TABLE_HEADING.LIST_TABLE_HEADING_1} </th></div>
                                <div className="listHeadingItem2"><th>{constants.TABLE_HEADING.LIST_TABLE_HEADING_2}</th></div>
                                <div className="listHeadingItem3"><th>{constants.TABLE_HEADING.LIST_TABLE_HEADING_3}</th></div>
                                <div className="listHeadingItem4"><th>{constants.TABLE_HEADING.LIST_TABLE_HEADING_4}</th></div>
                                <div className="listHeadingItem5"><th >{constants.TABLE_HEADING.LIST_TABLE_HEADING_5}</th></div>
                                <div className="listHeadingItem6"><th>{constants.TABLE_HEADING.LIST_TABLE_HEADING_6}</th></div>
                                <div className="listHeadingItem7"><th>{constants.TABLE_HEADING.LIST_TABLE_HEADING_7}</th></div>
                                <div className="listHeadingItem8"><th>{constants.TABLE_HEADING.LIST_TABLE_HEADING_8}</th></div>
                                <div className="listHeadingItem9"><th >{constants.TABLE_HEADING.LIST_TABLE_HEADING_9}</th></div>
                            </div>
                            </thead>        
                            <div className='tableBody'> 
                        
                        
                            <tbody id='tbody'> 
                                {searchResult.map(item=>(
                                       
                                            <tr key={item.id} >
                                                <div className='listTableData'>
                                                     <div className='listHeadingItem1'>   <td id='slno' onClick={()=>clickHandler(item)}>{i++}</td></div>
                                                     <div className='listHeadingItem2'><td ids='names' onClick={()=>clickHandler(item)}>{item.name}</td></div>
                                                     <div className='listHeadingItem3'><td id='id' onClick={()=>clickHandler(item)}>{item.id}</td></div>
                                                     <div className='listHeadingItem4'><td id='gender' onClick={()=>clickHandler(item)}>{item.gender}</td></div>
                                                     <div className='listHeadingItem5'><td id='priority' onClick={()=>clickHandler(item)}>{item.priority}</td></div>
                                                     <div className='listHeadingItem6'><td id='savings' onClick={()=>clickHandler(item)}>{item.savings}</td></div>
                                                     <div className='listHeadingItem7'><td id='rd' onClick={()=>clickHandler(item)}>{item.rd}</td></div>
                                                     <div className='listHeadingItem8'><td id='edit'> <button  onClick={()=>{editHandler(item)}} >{constants.TABLE_HEADING.LIST_TABLE_HEADING_8}</button></td></div>
                                                     <div className='listHeadingItem9'><td id='delete'><button onClick={()=>togglePopup(item.id,item.name)} >{constants.TABLE_HEADING.LIST_TABLE_HEADING_9}</button></td></div>
                                            </div>
                                     </tr>
                                       
                                        
                                     
                                    ))}
                                
                            </tbody>
                            </div> 
                        
                    </table>